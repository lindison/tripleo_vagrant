# -*- mode: ruby -*-
# vi: set ft=ruby :

# Boxes to build a baseline Triple0 deployment

Vagrant.configure(2) do |config|
  # Create UnderCloud Servers
  (1..1).each do |i|
    config.vm.define "ooo0#{i}" do |under|
        under.vm.box = "centos/7"
        under.vm.hostname = "ooo0#{i}"
        under.vm.network :private_network, ip: "10.0.0.0#{i}"
        under.vm.network :private_network, ip: "10.0.2.0#{i}"
        under.vm.network :private_network, ip: "10.0.4.0#{i}"
        under.vm.network :private_network, ip: "10.0.10.0#{i}"
        under.vm.network "forwarded_port", guest: 80, host: "8#{i}"
        #Size the libvirt VM
        under.vm.provider "libvirt" do |vb|
          vb.memory = "8192"
          vb.cpus = "2"
        end
        under.vm.provision :shell, path: "bootstrp-bash.sh"
        under.vm.provision :shell, path: "bootstrp-common.sh"
    end
  end

  # Create an OverCloud Servers
  (1..1).each do |i|
    config.vm.define "controller0#{i}" do |rdo|
        rdo.vm.box = "centos/7"
        rdo.vm.hostname = "controller0#{i}"
        rdo.vm.network :private_network, ip: "10.0.0.1#{i}"
        rdo.vm.network :private_network, ip: "10.0.2.1#{i}"
        rdo.vm.network :private_network, ip: "10.0.4.1#{i}"
        rdo.vm.network :private_network, ip: "10.0.6.1#{i}"
        rdo.vm.network :private_network, ip: "10.0.10.1#{i}"
#        rdo.vm.network "forwarded_port", guest: 80, host: 31480
        rdo.vm.provider "libvirt" do |vb|
          vb.memory = "4096"
          vb.cpus = "2"
        end
        rdo.vm.provision :shell, path: "bootstrp-bash.sh"
        rdo.vm.provision :shell, path: "bootstrp-common.sh"
#        rdo.vm.provision :shell, path: "bootstrp-rdo.sh"
    end
  end

  # Create OverCLoud Compute Nodes for OpenStack
  (1..1).each do |i|
    config.vm.define "compute0#{i}" do |compute|
        compute.vm.box = "centos/7"
        compute.vm.hostname = "compute0#{i}"
        compute.vm.network :private_network, ip: "10.0.0.2#{i}"
        compute.vm.network :private_network, ip: "10.0.2.2#{i}"
        compute.vm.network :private_network, ip: "10.0.4.2#{i}"
        compute.vm.network :private_network, ip: "10.0.6.2#{i}"
        compute.vm.network :private_network, ip: "10.0.10.0#{i}"
#        compute.vm.network "forwarded_port", guest: 80, host: 31480
        compute.vm.provider "libvirt" do |vb|
          vb.memory = "4096"

        end
        compute.vm.provision :shell, path: "bootstrp-bash.sh"
        compute.vm.provision :shell, path: "bootstrp-common.sh"
    end
  end

  # Create MariaDB Nodes
  (1..1).each do |i|
    config.vm.define "db0#{i}" do |maria|
        maria.vm.box = "centos/7"
        maria.vm.hostname = "db0#{i}"
        maria.vm.network :private_network, ip: "10.0.0.3#{i}"
        maria.vm.network :private_network, ip: "10.0.2.3#{i}"
#        node.vm.network "forwarded_port", guest: 80, host: 31480
        maria.vm.provider "libvirt" do |vb|
          vb.memory = "2048"

        end
        maria.vm.provision :shell, path: "bootstrp-bash.sh"
        maria.vm.provision :shell, path: "bootstrp-common.sh"
    end
  end

  # Create Ceph Nodes for CEPH
  (1..1).each do |i|
    config.vm.define "ceph0#{i}" do |maria|
        maria.vm.box = "centos/7"
        maria.vm.hostname = "ceph0#{i}"
        maria.vm.network :private_network, ip: "10.0.0.4#{i}"
        maria.vm.network :private_network, ip: "10.0.2.4#{i}"
#        node.vm.network "forwarded_port", guest: 80, host: 31480
        maria.vm.provider "libvirt" do |vb|
          vb.memory = "512"

        end
        maria.vm.provision :shell, path: "bootstrp-bash.sh"
        maria.vm.provision :shell, path: "bootstrp-common.sh"
    end
  end

  # Create an Ansible Server
  (1..1).each do |i|
    config.vm.define "ansible0#{i}" do |acs|
        acs.vm.box = "yk0/ubuntu-xenial"
        acs.vm.hostname = "ansible0#{i}"
        acs.vm.network :private_network, ip: "10.0.0.5#{i}"
#        acs.vm.network "forwarded_port", guest: 80, host: 31480
        acs.vm.provider "libvirt" do |vb|
          vb.memory = "2048"

        end
        acs.vm.provision :shell, path: "bootstrp-bash.sh"
        acs.vm.provision :shell, path: "bootstrp-common.sh"
        acs.vm.provision :shell, path: "bootstrp-ansible.sh"
    end
  end
  
  (1..8).each do |i|
    config.vm.define "pxe#{i}" do |pxeclient|
      pxeclient.vm.network :public_network, :dev => "br-pxe", :mode => "bridge", :type => "bridge"      
      pxeclient.vm.provider :libvirt do |domain|
        domain.storage :file, :size => '100G', :type => 'qcow2'
        domain.boot 'network'
        domain.boot 'hd'
        domain.memory = "1024"
        domain.cpus = "1"
        domain.nested = "true"
      end
    end
  end

end
